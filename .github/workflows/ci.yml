name: CI

on:
  push:
    paths:
      - 'client/**'
      - 'server/**'
      - 'shared/**'
      - 'package.json'
      - 'package-lock.json'
      - 'Dockerfile'
      - '.github/workflows/ci.yml'
    branches:
      - '**'
    tags:
      - '*.*.*'
  workflow_dispatch:

env:
  ARTIFACT_NAME: social-media
  DOCKER_IMAGE_NAME: social-media
  DOCKER_REGISTRY_DOMAIN: ghcr.io

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    services:
      mongodb:
        image: mongo:6-jammy
        env:
          MONGO_INITDB_DATABASE: social-media
          MONGO_INITDB_ROOT_USERNAME: mongoadmin
          MONGO_INITDB_ROOT_PASSWORD: P4ssw0rd
        ports:
          - 27017:27017
      neo4j:
        image: neo4j:5-bullseye
        env:
          NEO4J_AUTH: none
        ports:
          - 7474:7474
          - 7687:7687
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm clean-install

      - name: Install client-side dependencies
        working-directory: client
        run: npm clean-install

      - name: Install server-side dependencies
        working-directory: server
        run: npm clean-install

      - name: Lint code
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Run tests
        env:
          NODE_ENV: test
        run: npm run test

      - name: Delete server-side tests
        working-directory: server
        run: rm --verbose --recursive --force dist/tests

      - name: Upload client-side build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}-client
          path: |
            client/dist/
            client/package.json
            client/package-lock.json

      - name: Upload server-side build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}-server
          path: |
            server/dist/
            server/package.json
            server/package-lock.json

  docker:
    name: Docker
    runs-on: ubuntu-22.04
    needs: build
    concurrency:
      group: docker
      cancel-in-progress: false
    permissions:
      contents: read
      packages: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && !startsWith( github.ref, 'refs/heads/dependabot/' ) }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY_DOMAIN }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download client-side build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}-client
          path: artifacts/client

      - name: Download server-side build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}-server
          path: artifacts/server

      - name: Create metadata for Docker image
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY_DOMAIN }}/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
          labels: |
            org.opencontainers.image.title=Social Media
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            com.docker.extension.publisher-url=https://viral32111.com

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' && !startsWith( github.ref, 'refs/heads/dependabot/' ) }}
          file: Dockerfile
          context: artifacts
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          provenance: false
          no-cache: true
          pull: true

      - name: Delete old Docker images
        if: ${{ github.event_name != 'pull_request' && !startsWith( github.ref, 'refs/heads/dependabot/' ) }}
        uses: snok/container-retention-policy@v2
        with:
          image-names: ${{ env.DOCKER_IMAGE_NAME }}
          cut-off: 24 hours ago UTC
          keep-at-least: 1
          untagged-only: true
          skip-tags: latest
          account-type: personal
          token: ${{ secrets.PACKAGES_PERSONAL_ACCESS_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy-to-pages.outputs.page_url }}
    concurrency:
      group: github-pages
      cancel-in-progress: false
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup GitHub Pages
        id: setup-pages
        uses: actions/configure-pages@v3

      - name: Download client-side build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}-client
          path: artifacts/client

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: artifacts/client/dist

      - name: Deploy to GitHub Pages
        id: deploy-to-pages
        uses: actions/deploy-pages@v2
